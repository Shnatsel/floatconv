floatconv::fast::i128_to_f32_truncate:
 push    {r4, r5, r6, r7, r8, r9, r11, lr}
 rsbs    r12, r0, #0
 rscs    lr, r1, #0
 rscs    r4, r2, #0
 rsc     r5, r3, #0
 cmp     r3, #0
 movpl   r4, r2
 clz     r2, r4
 movpl   r5, r3
 add     r2, r2, #32
 cmp     r5, #0
 clzne   r2, r5
 cmp     r3, #0
 movpl   r12, r0
 clz     r0, r12
 movpl   lr, r1
 add     r0, r0, #32
 cmp     lr, #0
 clzne   r0, lr
 orrs    r1, r4, r5
 addeq   r2, r0, #64
 and     r0, r2, #127
 rsb     r1, r0, #32
 subs    r7, r0, #32
 lsr     r6, r4, r1
 orr     r9, r6, r5, lsl, r0
 lslpl   r9, r4, r7
 rsb     r7, r0, #64
 cmp     r1, #0
 rsb     r1, r0, #96
 lsr     r7, lr, r7
 lsr     r8, r12, r1
 sub     r1, r0, #64
 movpl   r7, #0
 subs    r6, r0, #96
 orr     r1, r8, lr, lsl, r1
 lslpl   r1, r12, r6
 cmp     r0, #64
 orrlo   r1, r9, r7
 cmp     r0, #0
 moveq   r1, r5
 orr     r7, lr, r5
 lsr     r0, r1, #8
 sub     r0, r0, r2, lsl, #23
 orr     r2, r12, r4
 add     r0, r0, #511705088
 orrs    r2, r2, r7
 add     r0, r0, #1073741824
 lsreq   r0, r1, #8
 and     r1, r3, #-2147483648
 orr     r0, r0, r1
 vmov    s0, r0
 pop     {r4, r5, r6, r7, r8, r9, r11, pc}
