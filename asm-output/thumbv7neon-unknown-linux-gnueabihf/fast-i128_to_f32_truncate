floatconv::fast::i128_to_f32_truncate:
 push.w  {r4, r5, r6, r7, r8, r9, lr}
 adds.w  r0, r0, r3, asr, #31
 adcs.w  r4, r1, r3, asr, #31
 eor.w   r12, r0, r3, asr, #31
 adcs.w  r1, r2, r3, asr, #31
 clz     r0, r12
 eor.w   lr, r1, r3, asr, #31
 add.w   r5, r0, #32
 clz     r1, lr
 eor.w   r0, r4, r3, asr, #31
 add.w   r2, r1, #32
 adc.w   r1, r3, r3, asr, #31
 eor.w   r1, r1, r3, asr, #31
 cmp     r1, #0
 it      ne
 clzne   r2, r1
 cmp     r0, #0
 it      ne
 clzne   r5, r0
 orrs.w  r4, lr, r1
 it      eq
 addeq.w r2, r5, #64
 and     r4, r2, #127
 rsb.w   r6, r4, #32
 lsl.w   r5, r1, r4
 lsr.w   r7, lr, r6
 orr.w   r9, r7, r5
 subs.w  r7, r4, #32
 it      pl
 lslpl.w r9, lr, r7
 cmp     r6, #0
 sub.w   r6, r4, #64
 rsb.w   r7, r4, #64
 lsl.w   r8, r0, r6
 rsb.w   r6, r4, #96
 lsr.w   r7, r0, r7
 orr.w   r0, r0, r1
 lsr.w   r6, r12, r6
 it      pl
 movpl   r7, #0
 orr.w   r6, r6, r8
 subs.w  r5, r4, #96
 it      pl
 lslpl.w r6, r12, r5
 cmp     r4, #64
 it      lo
 orrlo.w r6, r9, r7
 cmp     r4, #0
 orr.w   r7, r12, lr
 it      eq
 moveq   r6, r1
 orrs    r0, r7
 lsr.w   r4, r6, #8
 sub.w   r2, r4, r2, lsl, #23
 and     r0, r3, #-2147483648
 add.w   r2, r2, #1585446912
 it      eq
 lsreq   r2, r6, #8
 orrs    r0, r2
 vmov    s0, r0
 pop.w   {r4, r5, r6, r7, r8, r9, pc}
