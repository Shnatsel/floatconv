floatconv::soft::u128_to_f64_truncate:
 push.w  {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 clz     r7, r2
 cmp     r3, #0
 add.w   r12, r7, #32
 clz     r7, r0
 it      ne
 clzne   r12, r3
 adds    r7, #32
 cmp     r1, #0
 it      ne
 clzne   r7, r1
 orrs.w  r6, r2, r3
 it      eq
 addeq.w r12, r7, #64
 and     lr, r12, #127
 rsb.w   r5, lr, #32
 sub.w   r9, lr, #64
 lsl.w   r4, r3, lr
 rsb.w   r11, lr, #64
 lsr.w   r6, r2, r5
 subs.w  r8, lr, #32
 orr.w   r6, r6, r4
 rsb.w   r4, lr, #96
 it      pl
 lslpl.w r6, r2, r8
 lsr.w   r7, r1, r11
 lsr.w   r10, r0, r4
 lsl.w   r4, r1, r9
 cmp     r5, #0
 orr.w   r4, r4, r10
 it      pl
 movpl   r7, #0
 subs.w  r10, lr, #96
 it      pl
 lslpl.w r4, r0, r10
 cmp.w   lr, #64
 it      lo
 orrlo.w r4, r6, r7
 cmp.w   lr, #0
 it      eq
 moveq   r4, r3
 lsrs    r6, r4, #11
 sub.w   r7, r6, r12, lsl, #20
 orrs    r3, r1
 orr.w   r6, r0, r2
 add.w   r7, r7, #1073741824
 orrs    r3, r6
 rsb.w   r6, r11, #32
 add.w   r12, r7, #131072000
 lsr.w   r3, r0, r11
 it      eq
 lsreq.w r12, r4, #11
 lsl.w   r6, r1, r6
 orrs    r3, r6
 cmp     r5, #0
 it      pl
 lsrpl.w r3, r1, r5
 lsl.w   r1, r2, lr
 cmp.w   r8, #0
 lsl.w   r0, r0, r9
 it      pl
 movpl   r1, #0
 cmp.w   r10, #0
 it      pl
 movpl   r0, #0
 cmp.w   lr, #64
 it      lo
 orrlo.w r0, r1, r3
 cmp.w   lr, #0
 it      eq
 moveq   r0, r2
 mov     r1, r12
 lsrs    r0, r0, #11
 orr.w   r0, r0, r4, lsl, #21
 pop.w   {r4, r5, r6, r7, r8, r9, r10, r11, pc}
