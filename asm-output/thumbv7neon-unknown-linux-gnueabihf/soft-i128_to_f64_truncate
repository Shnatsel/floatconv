floatconv::soft::i128_to_f64_truncate:
 push.w  {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, #4
 adds.w  r0, r0, r3, asr, #31
 adcs.w  r4, r1, r3, asr, #31
 eor.w   r9, r0, r3, asr, #31
 adcs.w  r1, r2, r3, asr, #31
 clz     r0, r9
 eor.w   r10, r1, r3, asr, #31
 add.w   r0, r0, #32
 clz     r2, r10
 eor.w   r4, r4, r3, asr, #31
 add.w   lr, r2, #32
 adc.w   r2, r3, r3, asr, #31
 eor.w   r12, r2, r3, asr, #31
 cmp.w   r12, #0
 it      ne
 clzne   lr, r12
 cmp     r4, #0
 it      ne
 clzne   r0, r4
 orrs.w  r5, r10, r12
 it      eq
 addeq.w lr, r0, #64
 and     r0, lr, #127
 rsb.w   r6, r0, #32
 sub.w   r11, r0, #64
 lsl.w   r5, r12, r0
 rsb.w   r2, r0, #64
 lsr.w   r7, r10, r6
 subs.w  r1, r0, #32
 orr.w   r7, r7, r5
 rsb.w   r5, r0, #96
 str     r1, [sp]
 it      pl
 lslpl.w r7, r10, r1
 lsr.w   r5, r9, r5
 lsl.w   r8, r4, r11
 lsr.w   r1, r4, r2
 cmp     r6, #0
 orr.w   r5, r5, r8
 it      pl
 movpl   r1, #0
 subs.w  r8, r0, #96
 it      pl
 lslpl.w r5, r9, r8
 cmp     r0, #64
 it      lo
 orrlo.w r5, r7, r1
 lsr.w   r1, r9, r2
 rsb.w   r2, r2, #32
 cmp     r0, #0
 it      eq
 moveq   r5, r12
 lsl.w   r2, r4, r2
 orrs    r1, r2
 cmp     r6, #0
 it      pl
 lsrpl.w r1, r4, r6
 ldr     r6, [sp]
 lsl.w   r2, r10, r0
 orr.w   r7, r4, r12
 cmp     r6, #0
 lsl.w   r6, r9, r11
 it      pl
 movpl   r2, #0
 cmp.w   r8, #0
 it      pl
 movpl   r6, #0
 cmp     r0, #64
 it      lo
 orrlo.w r6, r2, r1
 lsrs    r1, r5, #11
 sub.w   r1, r1, lr, lsl, #20
 cmp     r0, #0
 add.w   r1, r1, #1073741824
 orr.w   r2, r9, r10
 it      eq
 moveq   r6, r10
 orrs    r2, r7
 add.w   r1, r1, #131072000
 lsr.w   r0, r6, #11
 it      eq
 lsreq   r1, r5, #11
 and     r2, r3, #-2147483648
 orr.w   r0, r0, r5, lsl, #21
 orrs    r1, r2
 add     sp, #4
 pop.w   {r4, r5, r6, r7, r8, r9, r10, r11, pc}
