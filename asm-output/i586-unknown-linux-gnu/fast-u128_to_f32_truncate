floatconv::fast::u128_to_f32_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 push    eax
 mov     edi, dword, ptr, [esp, +, 24]
 mov     ebp, dword, ptr, [esp, +, 32]
 mov     ebx, dword, ptr, [esp, +, 36]
 test    ebx, ebx
 jne     <label>
 bsr     eax, ebp
 xor     eax, 31
 add     eax, 32
 mov     esi, dword, ptr, [esp, +, 28]
 bsr     edx, edi
 mov     ecx, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     eax, ebx
 xor     eax, 31
 mov     esi, dword, ptr, [esp, +, 28]
 bsr     edx, edi
 mov     ecx, 63
 je      <label>
<label>:
 mov     ecx, edx
<label>:
 test    esi, esi
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, ebp
 or      edx, ebx
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, esi
 xor     ecx, 31
 mov     edx, ebp
 or      edx, ebx
 jne     <label>
<label>:
 add     ecx, 64
 mov     eax, ecx
<label>:
 mov     ch, al
 and     ch, 127
 mov     cl, ch
 add     cl, -64
 mov     edx, edi
 shl     edx, cl
 shld    esi, edi, cl
 test    cl, 32
 jne     <label>
 mov     edx, esi
<label>:
 mov     esi, ebx
 mov     cl, al
 shld    esi, ebp, cl
 shl     ebp, cl
 test    al, 32
 jne     <label>
 mov     ebp, esi
<label>:
 mov     cl, ch
 sub     cl, 64
 neg     cl
 mov     ebx, dword, ptr, [esp, +, 28]
 shr     ebx, cl
 xor     esi, esi
 test    cl, 32
 mov     edi, 0
 jne     <label>
 mov     edi, ebx
<label>:
 cmp     ch, 64
 jae     <label>
 or      ebp, edi
 mov     edx, ebp
<label>:
 mov     edi, dword, ptr, [esp, +, 24]
 mov     ebx, dword, ptr, [esp, +, 32]
 test    ch, ch
 mov     ecx, dword, ptr, [esp, +, 36]
 je      <label>
 mov     ecx, edx
<label>:
 shr     ecx, 8
 mov     edx, dword, ptr, [esp, +, 28]
 or      edx, dword, ptr, [esp, +, 36]
 or      edi, ebx
 or      edi, edx
 je      <label>
 shl     eax, 23
 mov     esi, 2122317824
 sub     esi, eax
<label>:
 add     esi, ecx
 mov     dword, ptr, [esp], esi
 fld     dword, ptr, [esp]
 add     esp, 4
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
