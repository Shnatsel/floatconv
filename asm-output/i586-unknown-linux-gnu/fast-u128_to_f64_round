floatconv::fast::u128_to_f64_round:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 28
 mov     esi, dword, ptr, [esp, +, 48]
 mov     edi, dword, ptr, [esp, +, 56]
 mov     ebx, dword, ptr, [esp, +, 60]
 test    ebx, ebx
 jne     <label>
 bsr     eax, edi
 xor     eax, 31
 add     eax, 32
 mov     ebp, dword, ptr, [esp, +, 52]
 bsr     edx, esi
 mov     ecx, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     eax, ebx
 xor     eax, 31
 mov     ebp, dword, ptr, [esp, +, 52]
 bsr     edx, esi
 mov     ecx, 63
 je      <label>
<label>:
 mov     ecx, edx
<label>:
 test    ebp, ebp
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, edi
 or      edx, ebx
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, ebp
 xor     ecx, 31
 mov     edx, edi
 or      edx, ebx
 jne     <label>
<label>:
 add     ecx, 64
 mov     eax, ecx
<label>:
 mov     edx, edi
 mov     ecx, eax
 shl     edx, cl
 mov     edi, esi
 shl     edi, cl
 shld    ebp, esi, cl
 test    al, 32
 jne     <label>
 mov     dword, ptr, [esp], edx
 jmp     <label>
<label>:
 mov     ebp, edi
 mov     dword, ptr, [esp], 0
 xor     edi, edi
<label>:
 mov     dword, ptr, [esp, +, 8], edx
 mov     dh, al
 and     dh, 127
 mov     dl, dh
 sub     dl, 64
 jb      <label>
 xor     edi, edi
<label>:
 mov     dword, ptr, [esp, +, 12], edi
 neg     dl
 mov     edi, dword, ptr, [esp, +, 52]
 mov     ebx, edi
 mov     ecx, edx
 shr     ebx, cl
 shrd    esi, edi, cl
 test    dl, 32
 mov     ecx, ebx
 jne     <label>
 mov     ecx, esi
<label>:
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ch, dh
 add     ch, -64
 mov     edi, dword, ptr, [esp, +, 48]
 mov     cl, ch
 shl     edi, cl
 test    ch, 32
 mov     esi, 0
 jne     <label>
 mov     esi, edi
<label>:
 cmp     dh, 64
 jb      <label>
 xor     ebp, ebp
 mov     dword, ptr, [esp, +, 4], esi
 test    dl, 32
 mov     dword, ptr, [esp], 0
 je      <label>
 jmp     <label>
<label>:
 mov     esi, dword, ptr, [esp]
 or      esi, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [esp, +, 4], esi
 test    dl, 32
 mov     dword, ptr, [esp], 0
 jne     <label>
<label>:
 mov     dword, ptr, [esp], ebx
<label>:
 mov     ebx, dword, ptr, [esp, +, 60]
 mov     cl, al
 mov     esi, dword, ptr, [esp, +, 56]
 shld    ebx, esi, cl
 test    al, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 8], ebx
<label>:
 mov     ebx, dword, ptr, [esp, +, 52]
 mov     cl, ch
 mov     esi, dword, ptr, [esp, +, 48]
 shld    ebx, esi, cl
 test    ch, 32
 je      <label>
 cmp     dh, 64
 jb      <label>
<label>:
 mov     esi, dword, ptr, [esp, +, 60]
 test    dh, dh
 mov     edx, dword, ptr, [esp, +, 56]
 je      <label>
<label>:
 mov     esi, edi
 mov     edx, dword, ptr, [esp, +, 4]
<label>:
 mov     edi, esi
 shld    esi, edx, 21
 shld    edx, ebp, 21
 mov     ecx, dword, ptr, [esp, +, 12]
 shld    ebp, ecx, 21
 or      ebp, ecx
 mov     ebx, edx
 shr     ebx, 31
 mov     ecx, esi
 not     ecx
 and     ecx, ebx
 shr     edi, 11
 cmp     ebp, ecx
 sbb     edx, 0
 mov     ebx, dword, ptr, [esp, +, 52]
 or      ebx, dword, ptr, [esp, +, 60]
 mov     ecx, dword, ptr, [esp, +, 48]
 or      ecx, dword, ptr, [esp, +, 56]
 shr     edx, 31
 or      ecx, ebx
 mov     ecx, 0
 je      <label>
 shl     eax, 20
 mov     ecx, 1204813824
 sub     ecx, eax
<label>:
 add     esi, edx
 mov     dword, ptr, [esp, +, 16], esi
 adc     ecx, edi
 mov     dword, ptr, [esp, +, 20], ecx
 fld     qword, ptr, [esp, +, 16]
 add     esp, 28
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     edi, ebx
 cmp     dh, 64
 jae     <label>
<label>:
 mov     edi, dword, ptr, [esp, +, 8]
 or      edi, dword, ptr, [esp]
 mov     esi, dword, ptr, [esp, +, 60]
 test    dh, dh
 mov     edx, dword, ptr, [esp, +, 56]
 jne     <label>
 jmp     <label>
