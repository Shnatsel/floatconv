floatconv::soft::i128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 28
 mov     ecx, dword, ptr, [esp, +, 48]
 mov     esi, dword, ptr, [esp, +, 52]
 mov     edi, ecx
 neg     edi
 mov     ebx, 0
 sbb     ebx, esi
 mov     ebp, 0
 sbb     ebp, dword, ptr, [esp, +, 56]
 mov     eax, dword, ptr, [esp, +, 60]
 mov     edx, 0
 sbb     edx, eax
 test    eax, eax
 js      .LBB9_2
 mov     ebx, esi
 mov     edi, ecx
 mov     ebp, dword, ptr, [esp, +, 56]
 mov     edx, dword, ptr, [esp, +, 60]
.LBB9_2:
 test    edx, edx
 jne     .LBB9_3
 bsr     eax, ebp
 xor     eax, 31
 add     eax, 32
 mov     dword, ptr, [esp], eax
 bsr     ecx, edi
 mov     eax, 63
 jne     .LBB9_6
 jmp     .LBB9_7
.LBB9_3:
 bsr     eax, edx
 xor     eax, 31
 mov     dword, ptr, [esp], eax
 bsr     ecx, edi
 mov     eax, 63
 je      .LBB9_7
.LBB9_6:
 mov     eax, ecx
.LBB9_7:
 test    ebx, ebx
 jne     .LBB9_8
 xor     eax, 31
 add     eax, 32
 mov     ecx, ebp
 or      ecx, edx
 je      .LBB9_11
 jmp     .LBB9_12
.LBB9_8:
 bsr     eax, ebx
 xor     eax, 31
 mov     ecx, ebp
 or      ecx, edx
 jne     .LBB9_12
.LBB9_11:
 add     eax, 64
 mov     dword, ptr, [esp], eax
.LBB9_12:
 mov     dword, ptr, [esp, +, 8], edx
 mov     eax, dword, ptr, [esp]
 and     al, 127
 mov     ah, al
 sub     ah, 64
 neg     ah
 mov     dword, ptr, [esp, +, 20], edi
 mov     edx, edi
 mov     cl, ah
 shrd    edx, ebx, cl
 mov     edi, ebx
 shr     edi, cl
 test    ah, 32
 mov     ecx, edi
 jne     .LBB9_14
 mov     ecx, edx
.LBB9_14:
 mov     dword, ptr, [esp, +, 4], ecx
 mov     dword, ptr, [esp, +, 12], ebx
 mov     dword, ptr, [esp, +, 16], ebp
 mov     ecx, dword, ptr, [esp]
 shl     ebp, cl
 test    cl, 32
 mov     esi, 0
 jne     .LBB9_16
 mov     esi, ebp
.LBB9_16:
 mov     ebx, eax
 add     bl, -64
 mov     edx, dword, ptr, [esp, +, 20]
 mov     ecx, ebx
 shl     edx, cl
 test    bl, 32
 mov     ecx, 0
 jne     .LBB9_18
 mov     ecx, edx
.LBB9_18:
 cmp     al, 64
 jae     .LBB9_20
 or      esi, dword, ptr, [esp, +, 4]
 mov     ecx, esi
.LBB9_20:
 mov     esi, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [esp, +, 24], ecx
 test    ah, 32
 mov     dword, ptr, [esp, +, 4], 0
 jne     .LBB9_22
 mov     dword, ptr, [esp, +, 4], edi
.LBB9_22:
 mov     ecx, dword, ptr, [esp]
 mov     edi, dword, ptr, [esp, +, 16]
 shld    esi, edi, cl
 test    cl, 32
 jne     .LBB9_24
 mov     ebp, esi
.LBB9_24:
 mov     esi, dword, ptr, [esp, +, 12]
 mov     ecx, ebx
 mov     edi, dword, ptr, [esp, +, 20]
 shld    esi, edi, cl
 test    bl, 32
 jne     .LBB9_26
 mov     edx, esi
.LBB9_26:
 cmp     al, 64
 jae     .LBB9_28
 or      ebp, dword, ptr, [esp, +, 4]
 mov     edx, ebp
.LBB9_28:
 mov     esi, dword, ptr, [esp, +, 60]
 mov     ebx, dword, ptr, [esp, +, 12]
 test    al, al
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     ebp, dword, ptr, [esp, +, 16]
 mov     eax, ebp
 je      .LBB9_30
 mov     ecx, edx
 mov     eax, dword, ptr, [esp, +, 24]
.LBB9_30:
 and     esi, -2147483648
 shrd    eax, ecx, 11
 shr     ecx, 11
 or      edi, ebp
 or      ebx, dword, ptr, [esp, +, 8]
 or      ebx, edi
 mov     edx, 0
 je      .LBB9_32
 mov     edi, dword, ptr, [esp]
 shl     edi, 20
 mov     edx, 1204813824
 sub     edx, edi
.LBB9_32:
 add     edx, ecx
 or      edx, esi
 add     esp, 28
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
