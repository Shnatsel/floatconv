floatconv::fast::i128_to_f32_round:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 44
 mov     eax, dword, ptr, [esp, +, 72]
 mov     ecx, dword, ptr, [esp, +, 64]
 mov     edx, dword, ptr, [esp, +, 68]
 mov     ebp, ecx
 neg     ebp
 mov     esi, 0
 sbb     esi, edx
 mov     dword, ptr, [esp], esi
 mov     ebx, 0
 sbb     ebx, eax
 mov     edi, dword, ptr, [esp, +, 76]
 mov     esi, 0
 sbb     esi, edi
 test    edi, edi
 js      <label>
 mov     dword, ptr, [esp], edx
 mov     ebp, ecx
 mov     ebx, eax
 mov     esi, edi
<label>:
 test    esi, esi
 jne     <label>
 bsr     edi, ebx
 xor     edi, 31
 add     edi, 32
 bsr     edx, ebp
 mov     ecx, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     edi, esi
 xor     edi, 31
 bsr     edx, ebp
 mov     ecx, 63
 je      <label>
<label>:
 mov     ecx, edx
<label>:
 mov     edx, dword, ptr, [esp]
 test    edx, edx
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, ebx
 or      edx, esi
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, edx
 xor     ecx, 31
 mov     edx, ebx
 or      edx, esi
 jne     <label>
<label>:
 add     ecx, 64
 mov     edi, ecx
<label>:
 mov     dword, ptr, [esp, +, 20], ebx
 mov     ecx, edi
 shl     ebx, cl
 mov     edx, dword, ptr, [esp]
 shld    edx, ebp, cl
 mov     eax, ebp
 shl     eax, cl
 test    cl, 32
 mov     dword, ptr, [esp, +, 28], ebx
 jne     <label>
 mov     dword, ptr, [esp, +, 16], edx
 mov     dword, ptr, [esp, +, 4], ebx
 jmp     <label>
<label>:
 mov     dword, ptr, [esp, +, 16], eax
 mov     dword, ptr, [esp, +, 4], 0
 xor     eax, eax
<label>:
 mov     ecx, dword, ptr, [esp, +, 76]
 mov     dword, ptr, [esp, +, 32], ecx
 mov     ebx, edi
 mov     dh, bl
 and     dh, 127
 mov     dl, dh
 sub     dl, 64
 jb      <label>
 xor     eax, eax
<label>:
 neg     dl
 mov     dword, ptr, [esp, +, 24], ebp
 mov     edi, ebp
 mov     ecx, edx
 mov     ebp, dword, ptr, [esp]
 shrd    edi, ebp, cl
 shr     ebp, cl
 test    dl, 32
 mov     ecx, ebp
 jne     <label>
 mov     ecx, edi
<label>:
 mov     dword, ptr, [esp, +, 8], ecx
 mov     ch, dh
 add     ch, -64
 mov     edi, dword, ptr, [esp, +, 24]
 mov     cl, ch
 shl     edi, cl
 test    ch, 32
 mov     dword, ptr, [esp, +, 12], 0
 jne     <label>
 mov     dword, ptr, [esp, +, 12], edi
<label>:
 cmp     dh, 64
 jb      <label>
 mov     dword, ptr, [esp, +, 16], 0
 test    dl, 32
 mov     dword, ptr, [esp, +, 8], 0
 je      <label>
 jmp     <label>
<label>:
 mov     dword, ptr, [esp, +, 36], ebx
 mov     ebx, dword, ptr, [esp, +, 4]
 or      ebx, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [esp, +, 12], ebx
 mov     ebx, dword, ptr, [esp, +, 36]
 test    dl, 32
 mov     dword, ptr, [esp, +, 8], 0
 jne     <label>
<label>:
 mov     dword, ptr, [esp, +, 8], ebp
<label>:
 mov     dword, ptr, [esp, +, 4], esi
 mov     ebp, esi
 mov     cl, bl
 mov     esi, dword, ptr, [esp, +, 20]
 shld    ebp, esi, cl
 test    bl, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 28], ebp
<label>:
 mov     ebp, dword, ptr, [esp]
 mov     cl, ch
 mov     esi, dword, ptr, [esp, +, 24]
 shld    ebp, esi, cl
 test    ch, 32
 je      <label>
 cmp     dh, 64
 mov     ebp, dword, ptr, [esp, +, 4]
 mov     ecx, dword, ptr, [esp, +, 28]
 jb      <label>
<label>:
 test    dh, dh
 mov     ecx, dword, ptr, [esp, +, 20]
 je      <label>
<label>:
 mov     ebp, edi
 mov     ecx, dword, ptr, [esp, +, 12]
<label>:
 mov     edi, ebp
 shld    edi, ecx, 24
 or      eax, ecx
 and     dword, ptr, [esp, +, 32], -2147483648
 mov     edx, ebp
 shr     edx, 8
 xor     ecx, ecx
 or      eax, dword, ptr, [esp, +, 16]
 setne   cl
 or      ecx, edi
 shr     ebp, 7
 mov     edi, edx
 not     edi
 and     edi, ebp
 and     edi, 1
 sub     ecx, edi
 mov     esi, dword, ptr, [esp, +, 24]
 or      esi, dword, ptr, [esp, +, 20]
 mov     edi, dword, ptr, [esp]
 or      edi, dword, ptr, [esp, +, 4]
 shr     ecx, 31
 or      edi, esi
 mov     esi, 0
 je      <label>
 shl     ebx, 23
 mov     esi, 1585446912
 sub     esi, ebx
<label>:
 add     esi, edx
 add     esi, ecx
 or      esi, dword, ptr, [esp, +, 32]
 mov     dword, ptr, [esp, +, 40], esi
 fld     dword, ptr, [esp, +, 40]
 add     esp, 44
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     edi, ebp
 cmp     dh, 64
 mov     ebp, dword, ptr, [esp, +, 4]
 mov     ecx, dword, ptr, [esp, +, 28]
 jae     <label>
<label>:
 or      ecx, dword, ptr, [esp, +, 8]
 mov     edi, ecx
 test    dh, dh
 mov     ecx, dword, ptr, [esp, +, 20]
 jne     <label>
 jmp     <label>
