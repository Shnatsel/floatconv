floatconv::i128_to_f64_round:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 52
 mov     ecx, dword, ptr, [esp, +, 72]
 mov     edx, dword, ptr, [esp, +, 76]
 mov     edi, ecx
 neg     edi
 mov     ebp, 0
 sbb     ebp, edx
 mov     eax, 0
 sbb     eax, dword, ptr, [esp, +, 80]
 mov     ebx, dword, ptr, [esp, +, 84]
 mov     esi, 0
 sbb     esi, ebx
 test    ebx, ebx
 js      .LBB8_2
 mov     ebp, edx
 mov     edi, ecx
 mov     eax, dword, ptr, [esp, +, 80]
 mov     esi, dword, ptr, [esp, +, 84]
.LBB8_2:
 test    esi, esi
 jne     .LBB8_3
 bsr     ecx, eax
 xor     ecx, 31
 add     ecx, 32
 mov     dword, ptr, [esp], ecx
 bsr     edx, edi
 mov     ecx, 63
 jne     .LBB8_6
 jmp     .LBB8_7
.LBB8_3:
 bsr     ecx, esi
 xor     ecx, 31
 mov     dword, ptr, [esp], ecx
 bsr     edx, edi
 mov     ecx, 63
 je      .LBB8_7
.LBB8_6:
 mov     ecx, edx
.LBB8_7:
 test    ebp, ebp
 jne     .LBB8_8
 xor     ecx, 31
 add     ecx, 32
 mov     edx, eax
 or      edx, esi
 je      .LBB8_11
 jmp     .LBB8_12
.LBB8_8:
 bsr     ecx, ebp
 xor     ecx, 31
 mov     edx, eax
 or      edx, esi
 jne     .LBB8_12
.LBB8_11:
 add     ecx, 64
 mov     dword, ptr, [esp], ecx
.LBB8_12:
 mov     ebx, eax
 mov     ecx, dword, ptr, [esp]
 shl     ebx, cl
 mov     dword, ptr, [esp, +, 20], ebp
 shld    ebp, edi, cl
 mov     edx, edi
 shl     edx, cl
 test    cl, 32
 mov     dword, ptr, [esp, +, 36], ebx
 jne     .LBB8_13
 mov     dword, ptr, [esp, +, 8], edx
 mov     dword, ptr, [esp, +, 4], ebx
 jmp     .LBB8_15
.LBB8_13:
 mov     ebp, edx
 mov     dword, ptr, [esp, +, 4], 0
 mov     dword, ptr, [esp, +, 8], 0
.LBB8_15:
 mov     dword, ptr, [esp, +, 16], eax
 mov     eax, dword, ptr, [esp]
 and     al, 127
 mov     edx, eax
 sub     dl, 64
 jb      .LBB8_17
 mov     dword, ptr, [esp, +, 8], 0
.LBB8_17:
 mov     dword, ptr, [esp, +, 12], esi
 neg     dl
 mov     dword, ptr, [esp, +, 24], edi
 mov     ebx, edi
 mov     ecx, edx
 mov     edi, dword, ptr, [esp, +, 20]
 shrd    ebx, edi, cl
 shr     edi, cl
 test    dl, 32
 mov     ecx, edi
 jne     .LBB8_19
 mov     ecx, ebx
.LBB8_19:
 mov     ebx, ecx
 mov     dh, al
 add     dh, -64
 mov     esi, dword, ptr, [esp, +, 24]
 mov     cl, dh
 shl     esi, cl
 test    dh, 32
 mov     ecx, 0
 jne     .LBB8_21
 mov     ecx, esi
.LBB8_21:
 cmp     al, 64
 jb      .LBB8_22
 xor     ebp, ebp
 mov     dword, ptr, [esp, +, 32], ecx
 test    dl, 32
 mov     ecx, 0
 je      .LBB8_25
 jmp     .LBB8_26
.LBB8_22:
 mov     ecx, dword, ptr, [esp, +, 4]
 or      ecx, ebx
 mov     dword, ptr, [esp, +, 32], ecx
 test    dl, 32
 mov     ecx, 0
 jne     .LBB8_26
.LBB8_25:
 mov     ecx, edi
.LBB8_26:
 mov     dword, ptr, [esp, +, 28], ecx
 mov     dword, ptr, [esp, +, 4], esi
 mov     edi, dword, ptr, [esp, +, 12]
 mov     ecx, dword, ptr, [esp]
 mov     ebx, dword, ptr, [esp, +, 16]
 shld    edi, ebx, cl
 test    cl, 32
 mov     ebx, dword, ptr, [esp, +, 36]
 jne     .LBB8_28
 mov     ebx, edi
.LBB8_28:
 mov     edi, dword, ptr, [esp, +, 20]
 mov     cl, dh
 mov     esi, dword, ptr, [esp, +, 24]
 shld    edi, esi, cl
 test    dh, 32
 mov     ecx, dword, ptr, [esp, +, 4]
 je      .LBB8_29
 cmp     al, 64
 jb      .LBB8_31
.LBB8_32:
 test    al, al
 mov     ebx, dword, ptr, [esp, +, 12]
 mov     edx, dword, ptr, [esp, +, 16]
 je      .LBB8_34
.LBB8_33:
 mov     ebx, ecx
 mov     edx, dword, ptr, [esp, +, 32]
.LBB8_34:
 mov     esi, ebx
 shld    ebx, edx, 21
 shld    edx, ebp, 21
 mov     ecx, dword, ptr, [esp, +, 8]
 shld    ebp, ecx, 21
 or      ebp, ecx
 mov     edi, edx
 shr     edi, 31
 mov     ecx, ebx
 not     ecx
 and     ecx, edi
 mov     edi, dword, ptr, [esp, +, 84]
 and     edi, -2147483648
 shr     esi, 11
 cmp     ebp, ecx
 sbb     edx, 0
 mov     ecx, dword, ptr, [esp, +, 24]
 or      ecx, dword, ptr, [esp, +, 16]
 mov     ebp, dword, ptr, [esp, +, 20]
 or      ebp, dword, ptr, [esp, +, 12]
 shr     edx, 31
 or      ebp, ecx
 mov     ecx, 0
 je      .LBB8_36
 mov     eax, dword, ptr, [esp]
 shl     eax, 20
 mov     ecx, 1204813824
 sub     ecx, eax
.LBB8_36:
 add     ebx, edx
 adc     ecx, esi
 mov     dword, ptr, [esp, +, 40], ebx
 or      ecx, edi
 mov     dword, ptr, [esp, +, 44], ecx
 fld     qword, ptr, [esp, +, 40]
 add     esp, 52
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
.LBB8_29:
 mov     ecx, edi
 cmp     al, 64
 jae     .LBB8_32
.LBB8_31:
 or      ebx, dword, ptr, [esp, +, 28]
 mov     ecx, ebx
 test    al, al
 mov     ebx, dword, ptr, [esp, +, 12]
 mov     edx, dword, ptr, [esp, +, 16]
 jne     .LBB8_33
 jmp     .LBB8_34
