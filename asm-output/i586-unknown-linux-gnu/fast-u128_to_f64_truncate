floatconv::fast::u128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 28
 mov     ebx, dword, ptr, [esp, +, 56]
 mov     esi, dword, ptr, [esp, +, 60]
 test    esi, esi
 jne     <label>
 bsr     eax, ebx
 xor     eax, 31
 add     eax, 32
 jmp     <label>
<label>:
 bsr     eax, esi
 xor     eax, 31
<label>:
 mov     dword, ptr, [esp, +, 4], eax
 mov     edi, dword, ptr, [esp, +, 52]
 bsr     edx, dword, ptr, [esp, +, 48]
 mov     ecx, 63
 je      <label>
 mov     ecx, edx
<label>:
 test    edi, edi
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, ebx
 or      edx, esi
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, edi
 xor     ecx, 31
 mov     edx, ebx
 or      edx, esi
 jne     <label>
<label>:
 add     ecx, 64
 mov     dword, ptr, [esp, +, 4], ecx
<label>:
 mov     eax, dword, ptr, [esp, +, 4]
 and     al, 127
 mov     edx, eax
 sub     dl, 64
 neg     dl
 mov     ebp, edi
 mov     ecx, edx
 shr     ebp, cl
 mov     esi, dword, ptr, [esp, +, 48]
 shrd    esi, edi, cl
 test    dl, 32
 mov     ecx, ebp
 jne     <label>
 mov     ecx, esi
<label>:
 mov     dword, ptr, [esp, +, 8], ecx
 mov     esi, ebx
 mov     ecx, dword, ptr, [esp, +, 4]
 shl     esi, cl
 test    cl, 32
 mov     ebx, 0
 jne     <label>
 mov     ebx, esi
<label>:
 mov     dh, al
 add     dh, -64
 mov     edi, dword, ptr, [esp, +, 48]
 mov     cl, dh
 shl     edi, cl
 test    dh, 32
 mov     ecx, 0
 je      <label>
 cmp     al, 64
 jb      <label>
<label>:
 mov     dword, ptr, [esp, +, 8], ecx
 test    dl, 32
 mov     ecx, 0
 jne     <label>
<label>:
 mov     ecx, ebp
<label>:
 mov     dword, ptr, [esp, +, 12], ecx
 mov     ebx, dword, ptr, [esp, +, 60]
 mov     ecx, dword, ptr, [esp, +, 4]
 mov     ebp, dword, ptr, [esp, +, 56]
 shld    ebx, ebp, cl
 test    cl, 32
 jne     <label>
 mov     esi, ebx
<label>:
 mov     ebx, dword, ptr, [esp, +, 52]
 mov     cl, dh
 mov     ebp, dword, ptr, [esp, +, 48]
 shld    ebx, ebp, cl
 test    dh, 32
 jne     <label>
 mov     edi, ebx
<label>:
 cmp     al, 64
 mov     ebp, dword, ptr, [esp, +, 60]
 jae     <label>
 or      esi, dword, ptr, [esp, +, 12]
 mov     edi, esi
<label>:
 mov     ebx, dword, ptr, [esp, +, 56]
 test    al, al
 mov     esi, ebp
 mov     ecx, ebx
 je      <label>
 mov     esi, edi
 mov     ecx, dword, ptr, [esp, +, 8]
<label>:
 mov     edx, esi
 shr     edx, 11
 shrd    ecx, esi, 11
 mov     eax, dword, ptr, [esp, +, 52]
 or      eax, ebp
 mov     esi, dword, ptr, [esp, +, 48]
 or      esi, ebx
 or      esi, eax
 mov     esi, 0
 je      <label>
 mov     eax, dword, ptr, [esp, +, 4]
 shl     eax, 20
 mov     esi, 1204813824
 sub     esi, eax
<label>:
 add     esi, edx
 mov     dword, ptr, [esp, +, 16], ecx
 mov     dword, ptr, [esp, +, 20], esi
 fld     qword, ptr, [esp, +, 16]
 add     esp, 28
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     ecx, edi
 cmp     al, 64
 jae     <label>
<label>:
 or      ebx, dword, ptr, [esp, +, 8]
 mov     ecx, ebx
 mov     dword, ptr, [esp, +, 8], ecx
 test    dl, 32
 mov     ecx, 0
 je      <label>
 jmp     <label>
