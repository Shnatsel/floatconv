floatconv::soft::u128_to_f32_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 mov     esi, dword, ptr, [esp, +, 20]
 mov     ebx, dword, ptr, [esp, +, 28]
 mov     ebp, dword, ptr, [esp, +, 32]
 test    ebp, ebp
 jne     <label>
 bsr     edx, ebx
 xor     edx, 31
 add     edx, 32
 mov     edi, dword, ptr, [esp, +, 24]
 bsr     ecx, esi
 mov     eax, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     edx, ebp
 xor     edx, 31
 mov     edi, dword, ptr, [esp, +, 24]
 bsr     ecx, esi
 mov     eax, 63
 je      <label>
<label>:
 mov     eax, ecx
<label>:
 test    edi, edi
 jne     <label>
 xor     eax, 31
 add     eax, 32
 mov     ecx, ebx
 or      ecx, ebp
 je      <label>
 jmp     <label>
<label>:
 bsr     eax, edi
 xor     eax, 31
 mov     ecx, ebx
 or      ecx, ebp
 jne     <label>
<label>:
 add     eax, 64
 mov     edx, eax
<label>:
 mov     ch, dl
 and     ch, 127
 mov     cl, ch
 add     cl, -64
 mov     edi, esi
 shl     edi, cl
 mov     eax, dword, ptr, [esp, +, 24]
 shld    eax, esi, cl
 test    cl, 32
 jne     <label>
 mov     edi, eax
<label>:
 mov     eax, ebp
 mov     cl, dl
 shld    eax, ebx, cl
 mov     esi, ebx
 shl     esi, cl
 test    dl, 32
 jne     <label>
 mov     esi, eax
<label>:
 mov     cl, ch
 sub     cl, 64
 neg     cl
 mov     ebp, dword, ptr, [esp, +, 24]
 shr     ebp, cl
 xor     eax, eax
 test    cl, 32
 mov     ebx, 0
 jne     <label>
 mov     ebx, ebp
<label>:
 cmp     ch, 64
 jae     <label>
 or      esi, ebx
 mov     edi, esi
<label>:
 mov     esi, dword, ptr, [esp, +, 20]
 mov     ebx, dword, ptr, [esp, +, 28]
 mov     ebp, dword, ptr, [esp, +, 32]
 test    ch, ch
 mov     ecx, ebp
 je      <label>
 mov     ecx, edi
<label>:
 shr     ecx, 8
 mov     edi, dword, ptr, [esp, +, 24]
 or      edi, ebp
 or      esi, ebx
 or      esi, edi
 je      <label>
 shl     edx, 23
 mov     eax, 2122317824
 sub     eax, edx
<label>:
 add     eax, ecx
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
