floatconv::soft::u128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     edi, dword, ptr, [esp, +, 40]
 mov     edx, dword, ptr, [esp, +, 44]
 test    edx, edx
 jne     .LBB4_1
 bsr     ebx, edi
 xor     ebx, 31
 add     ebx, 32
 mov     esi, dword, ptr, [esp, +, 36]
 bsr     ecx, dword, ptr, [esp, +, 32]
 mov     eax, 63
 jne     .LBB4_4
 jmp     .LBB4_5
.LBB4_1:
 bsr     ebx, edx
 xor     ebx, 31
 mov     esi, dword, ptr, [esp, +, 36]
 bsr     ecx, dword, ptr, [esp, +, 32]
 mov     eax, 63
 je      .LBB4_5
.LBB4_4:
 mov     eax, ecx
.LBB4_5:
 test    esi, esi
 jne     .LBB4_6
 xor     eax, 31
 add     eax, 32
 mov     ecx, edi
 or      ecx, edx
 je      .LBB4_9
 jmp     .LBB4_10
.LBB4_6:
 bsr     eax, esi
 xor     eax, 31
 mov     ecx, edi
 or      ecx, edx
 jne     .LBB4_10
.LBB4_9:
 add     eax, 64
 mov     ebx, eax
.LBB4_10:
 mov     eax, ebx
 and     al, 127
 mov     ch, al
 sub     ch, 64
 neg     ch
 mov     ebp, esi
 mov     cl, ch
 shr     ebp, cl
 mov     edx, dword, ptr, [esp, +, 32]
 shrd    edx, esi, cl
 test    ch, 32
 mov     esi, ebp
 jne     .LBB4_12
 mov     esi, edx
.LBB4_12:
 mov     dword, ptr, [esp], esi
 mov     cl, bl
 shl     edi, cl
 mov     dword, ptr, [esp, +, 8], ebx
 test    bl, 32
 mov     esi, 0
 jne     .LBB4_14
 mov     esi, edi
.LBB4_14:
 mov     ebx, eax
 add     bl, -64
 mov     edx, dword, ptr, [esp, +, 32]
 mov     cl, bl
 shl     edx, cl
 test    bl, 32
 mov     dword, ptr, [esp, +, 4], 0
 je      .LBB4_15
 cmp     al, 64
 jb      .LBB4_17
.LBB4_18:
 test    ch, 32
 mov     ecx, 0
 jne     .LBB4_20
.LBB4_19:
 mov     ecx, ebp
.LBB4_20:
 mov     dword, ptr, [esp], ecx
 mov     esi, dword, ptr, [esp, +, 44]
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     ebp, dword, ptr, [esp, +, 40]
 shld    esi, ebp, cl
 test    cl, 32
 jne     .LBB4_22
 mov     edi, esi
.LBB4_22:
 mov     esi, dword, ptr, [esp, +, 36]
 mov     ecx, ebx
 mov     ebp, dword, ptr, [esp, +, 32]
 shld    esi, ebp, cl
 test    bl, 32
 jne     .LBB4_24
 mov     edx, esi
.LBB4_24:
 cmp     al, 64
 mov     esi, dword, ptr, [esp, +, 8]
 mov     ebx, dword, ptr, [esp, +, 44]
 jae     .LBB4_26
 or      edi, dword, ptr, [esp]
 mov     edx, edi
.LBB4_26:
 test    al, al
 mov     ecx, ebx
 mov     edi, dword, ptr, [esp, +, 40]
 mov     eax, edi
 je      .LBB4_28
 mov     ecx, edx
 mov     eax, dword, ptr, [esp, +, 4]
.LBB4_28:
 shrd    eax, ecx, 11
 shr     ecx, 11
 mov     ebp, dword, ptr, [esp, +, 36]
 or      ebp, ebx
 mov     edx, dword, ptr, [esp, +, 32]
 or      edx, edi
 or      edx, ebp
 mov     edx, 0
 je      .LBB4_30
 shl     esi, 20
 mov     edx, 1204813824
 sub     edx, esi
.LBB4_30:
 add     edx, ecx
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
.LBB4_15:
 mov     dword, ptr, [esp, +, 4], edx
 cmp     al, 64
 jae     .LBB4_18
.LBB4_17:
 or      esi, dword, ptr, [esp]
 mov     dword, ptr, [esp, +, 4], esi
 test    ch, 32
 mov     ecx, 0
 je      .LBB4_19
 jmp     .LBB4_20
