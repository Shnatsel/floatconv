floatconv::soft::u128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     edi, dword, ptr, [esp, +, 40]
 mov     edx, dword, ptr, [esp, +, 44]
 test    edx, edx
 jne     <label>
 bsr     ebx, edi
 xor     ebx, 31
 add     ebx, 32
 mov     esi, dword, ptr, [esp, +, 36]
 bsr     ecx, dword, ptr, [esp, +, 32]
 mov     eax, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     ebx, edx
 xor     ebx, 31
 mov     esi, dword, ptr, [esp, +, 36]
 bsr     ecx, dword, ptr, [esp, +, 32]
 mov     eax, 63
 je      <label>
<label>:
 mov     eax, ecx
<label>:
 test    esi, esi
 jne     <label>
 xor     eax, 31
 add     eax, 32
 mov     ecx, edi
 or      ecx, edx
 je      <label>
 jmp     <label>
<label>:
 bsr     eax, esi
 xor     eax, 31
 mov     ecx, edi
 or      ecx, edx
 jne     <label>
<label>:
 add     eax, 64
 mov     ebx, eax
<label>:
 mov     eax, ebx
 and     al, 127
 mov     ch, al
 sub     ch, 64
 neg     ch
 mov     ebp, esi
 mov     cl, ch
 shr     ebp, cl
 mov     edx, dword, ptr, [esp, +, 32]
 shrd    edx, esi, cl
 test    ch, 32
 mov     esi, ebp
 jne     <label>
 mov     esi, edx
<label>:
 mov     dword, ptr, [esp], esi
 mov     cl, bl
 shl     edi, cl
 mov     dword, ptr, [esp, +, 8], ebx
 test    bl, 32
 mov     esi, 0
 jne     <label>
 mov     esi, edi
<label>:
 mov     ebx, eax
 add     bl, -64
 mov     edx, dword, ptr, [esp, +, 32]
 mov     cl, bl
 shl     edx, cl
 test    bl, 32
 mov     dword, ptr, [esp, +, 4], 0
 je      <label>
 cmp     al, 64
 jb      <label>
<label>:
 test    ch, 32
 mov     ecx, 0
 jne     <label>
<label>:
 mov     ecx, ebp
<label>:
 mov     dword, ptr, [esp], ecx
 mov     esi, dword, ptr, [esp, +, 44]
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     ebp, dword, ptr, [esp, +, 40]
 shld    esi, ebp, cl
 test    cl, 32
 jne     <label>
 mov     edi, esi
<label>:
 mov     esi, dword, ptr, [esp, +, 36]
 mov     ecx, ebx
 mov     ebp, dword, ptr, [esp, +, 32]
 shld    esi, ebp, cl
 test    bl, 32
 jne     <label>
 mov     edx, esi
<label>:
 cmp     al, 64
 mov     esi, dword, ptr, [esp, +, 8]
 mov     ebx, dword, ptr, [esp, +, 44]
 jae     <label>
 or      edi, dword, ptr, [esp]
 mov     edx, edi
<label>:
 test    al, al
 mov     ecx, ebx
 mov     edi, dword, ptr, [esp, +, 40]
 mov     eax, edi
 je      <label>
 mov     ecx, edx
 mov     eax, dword, ptr, [esp, +, 4]
<label>:
 shrd    eax, ecx, 11
 shr     ecx, 11
 mov     ebp, dword, ptr, [esp, +, 36]
 or      ebp, ebx
 mov     edx, dword, ptr, [esp, +, 32]
 or      edx, edi
 or      edx, ebp
 mov     edx, 0
 je      <label>
 shl     esi, 20
 mov     edx, 1204813824
 sub     edx, esi
<label>:
 add     edx, ecx
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     dword, ptr, [esp, +, 4], edx
 cmp     al, 64
 jae     <label>
<label>:
 or      esi, dword, ptr, [esp]
 mov     dword, ptr, [esp, +, 4], esi
 test    ch, 32
 mov     ecx, 0
 je      <label>
 jmp     <label>
