floatconv::soft::f32_to_i128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     esi, dword, ptr, [esp, +, 36]
 mov     eax, dword, ptr, [esp, +, 32]
 mov     ecx, esi
 and     ecx, 2147483647
 cmp     ecx, 2139095040
 ja      <label>
 cmp     ecx, 2130706431
 jbe     <label>
 shr     esi, 31
 xor     edi, edi
 mov     ecx, 0
 mov     ebp, 0
 add     esi, -1
 adc     ecx, -1
 adc     ebp, -1
 adc     edi, 2147483647
 jmp     <label>
<label>:
 cmp     ecx, 1065353215
 jbe     <label>
 mov     ebx, esi
 mov     edx, esi
 mov     ch, 125
 xor     edi, edi
 shl     ebx, 7
 shr     edx, 23
 and     ebx, 1073741696
 sub     ch, dl
 xor     edx, edx
 or      ebx, 1073741824
 mov     cl, ch
 mov     eax, ebx
 shrd    edx, ebx, cl
 mov     ebp, ebx
 shr     eax, cl
 test    ch, 32
 cmovne  edx, eax
 cmovne  eax, edi
 and     ch, 127
 mov     cl, ch
 mov     dword, ptr, [esp, +, 4], edx
 sub     cl, 64
 mov     byte, ptr, [esp], cl
 mov     cl, ch
 cmovae  eax, edi
 xor     edx, edx
 add     cl, -64
 mov     dword, ptr, [esp, +, 8], eax
 shrd    edx, ebx, cl
 shr     ebp, cl
 test    cl, 32
 mov     cl, byte, ptr, [esp]
 cmovne  edx, ebp
 cmovne  ebp, edi
 neg     cl
 mov     eax, ecx
 shld    ebx, edi, cl
 test    al, 32
 mov     eax, dword, ptr, [esp, +, 4]
 cmovne  ebx, edi
 cmp     ch, 64
 cmovae  ebx, ebp
 cmovb   edx, edi
 mov     ebp, 0
 cmovae  eax, edi
 test    ch, ch
 cmove   edx, edi
 cmove   ebx, edi
 mov     dword, ptr, [esp, +, 4], eax
 mov     ecx, edx
 neg     ecx
 mov     dword, ptr, [esp], ecx
 mov     ecx, 0
 sbb     ecx, ebx
 sbb     ebp, eax
 mov     eax, dword, ptr, [esp, +, 32]
 sbb     edi, dword, ptr, [esp, +, 8]
 test    esi, esi
 mov     esi, dword, ptr, [esp]
 cmovns  ebp, dword, ptr, [esp, +, 4]
 cmovns  ecx, ebx
 cmovns  edi, dword, ptr, [esp, +, 8]
 cmovns  esi, edx
 jmp     <label>
<label>:
 xor     esi, esi
 xor     ecx, ecx
 xor     ebp, ebp
 xor     edi, edi
<label>:
 mov     dword, ptr, [eax], esi
 mov     dword, ptr, [eax, +, 4], ecx
 mov     dword, ptr, [eax, +, 8], ebp
 mov     dword, ptr, [eax, +, 12], edi
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
