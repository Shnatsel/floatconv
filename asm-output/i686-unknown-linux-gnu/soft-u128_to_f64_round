floatconv::soft::u128_to_f64_round:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 36
 mov     ebx, dword, ptr, [esp, +, 64]
 mov     edx, dword, ptr, [esp, +, 68]
 mov     edi, dword, ptr, [esp, +, 60]
 bsr     esi, ebx
 bsr     eax, edx
 mov     ebp, edx
 xor     esi, 31
 xor     eax, 31
 add     esi, 32
 test    edx, edx
 mov     edx, 63
 cmovne  esi, eax
 bsr     eax, dword, ptr, [esp, +, 56]
 cmovne  edx, eax
 bsr     ecx, edi
 mov     eax, ebx
 xor     edx, 31
 xor     ecx, 31
 add     edx, 32
 test    edi, edi
 cmove   ecx, edx
 mov     edx, edi
 add     ecx, 64
 or      eax, ebp
 mov     eax, ebx
 cmovne  ecx, esi
 mov     esi, dword, ptr, [esp, +, 56]
 shl     eax, cl
 mov     bh, cl
 mov     dword, ptr, [esp, +, 4], ecx
 mov     dword, ptr, [esp, +, 16], eax
 mov     ebp, esi
 shld    edi, esi, cl
 xor     esi, esi
 shl     ebp, cl
 test    cl, 32
 cmovne  edi, ebp
 cmovne  eax, esi
 cmovne  ebp, esi
 and     bh, 127
 mov     ch, bh
 mov     bl, bh
 sub     ch, 64
 cmovae  ebp, esi
 mov     esi, dword, ptr, [esp, +, 60]
 neg     ch
 mov     dword, ptr, [esp, +, 20], ebp
 mov     ebp, edx
 mov     edx, dword, ptr, [esp, +, 56]
 mov     cl, ch
 shr     ebp, cl
 shrd    edx, esi, cl
 test    ch, 32
 mov     esi, 0
 cmovne  edx, ebp
 add     bl, -64
 or      edx, eax
 mov     eax, dword, ptr, [esp, +, 56]
 mov     cl, bl
 shl     eax, cl
 test    bl, 32
 mov     dword, ptr, [esp, +, 12], eax
 cmovne  eax, esi
 cmp     bh, 64
 mov     esi, dword, ptr, [esp, +, 64]
 cmovb   eax, edx
 mov     edx, 0
 cmovae  edi, edx
 test    ch, 32
 mov     ecx, dword, ptr, [esp, +, 4]
 cmovne  ebp, edx
 mov     edx, dword, ptr, [esp, +, 68]
 mov     dword, ptr, [esp, +, 8], ebp
 mov     ebp, dword, ptr, [esp, +, 56]
 shld    edx, esi, cl
 test    byte, ptr, [esp, +, 4], 32
 mov     esi, dword, ptr, [esp, +, 60]
 mov     ecx, ebx
 cmovne  edx, dword, ptr, [esp, +, 16]
 shld    esi, ebp, cl
 test    bl, 32
 mov     ebp, dword, ptr, [esp, +, 68]
 mov     ecx, dword, ptr, [esp, +, 64]
 cmovne  esi, dword, ptr, [esp, +, 12]
 or      edx, dword, ptr, [esp, +, 8]
 cmp     bh, 64
 cmovae  edx, esi
 mov     esi, dword, ptr, [esp, +, 20]
 test    bh, bh
 cmove   edx, ebp
 cmove   eax, ecx
 mov     ecx, edx
 shld    edx, eax, 21
 shld    eax, edi, 21
 mov     ebx, edx
 shr     ecx, 11
 shld    edi, esi, 21
 not     ebx
 or      edi, esi
 mov     esi, eax
 shr     esi, 31
 and     ebx, esi
 mov     esi, 1204813824
 cmp     edi, ebx
 mov     edi, dword, ptr, [esp, +, 60]
 mov     ebx, dword, ptr, [esp, +, 56]
 sbb     eax, 0
 shr     eax, 31
 or      edi, ebp
 mov     ebp, dword, ptr, [esp, +, 4]
 or      ebx, dword, ptr, [esp, +, 64]
 shl     ebp, 20
 sub     esi, ebp
 or      ebx, edi
 mov     edi, 0
 cmove   esi, edi
 add     eax, edx
 adc     esi, ecx
 movd    xmm0, eax
 movd    xmm1, esi
 punpckldq xmm0, xmm1
 movq    qword, ptr, [esp, +, 24], xmm0
 fld     qword, ptr, [esp, +, 24]
 add     esp, 36
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
