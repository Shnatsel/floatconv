floatconv::soft::u128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 28
 mov     ebp, dword, ptr, [esp, +, 56]
 mov     edi, dword, ptr, [esp, +, 60]
 mov     ebx, dword, ptr, [esp, +, 52]
 mov     edx, 63
 mov     esi, dword, ptr, [esp, +, 48]
 bsr     ecx, ebp
 bsr     eax, edi
 xor     ecx, 31
 xor     eax, 31
 add     ecx, 32
 test    edi, edi
 cmovne  ecx, eax
 bsr     eax, dword, ptr, [esp, +, 48]
 cmovne  edx, eax
 bsr     eax, ebx
 xor     edx, 31
 xor     eax, 31
 add     edx, 32
 test    ebx, ebx
 cmove   eax, edx
 mov     edx, ebp
 add     eax, 64
 or      edx, edi
 mov     edi, ebx
 cmovne  eax, ecx
 mov     ecx, eax
 and     cl, 127
 mov     edx, ecx
 mov     dh, cl
 mov     byte, ptr, [esp, +, 7], cl
 sub     dl, 64
 neg     dl
 mov     ecx, edx
 shrd    esi, ebx, cl
 shr     edi, cl
 test    dl, 32
 mov     ecx, eax
 mov     ebx, 0
 cmovne  esi, edi
 shl     ebp, cl
 xor     ecx, ecx
 test    al, 32
 mov     dword, ptr, [esp, +, 12], ebp
 cmovne  ebp, ecx
 mov     ch, dh
 or      ebp, esi
 mov     esi, dword, ptr, [esp, +, 48]
 add     ch, -64
 mov     cl, ch
 shl     esi, cl
 test    ch, 32
 mov     cl, al
 mov     dword, ptr, [esp, +, 8], esi
 cmovne  esi, ebx
 cmp     dh, 64
 cmovb   esi, ebp
 test    dl, 32
 mov     edx, 0
 mov     ebp, dword, ptr, [esp, +, 52]
 cmovne  edi, edx
 mov     edx, dword, ptr, [esp, +, 60]
 mov     ebx, edi
 mov     edi, dword, ptr, [esp, +, 56]
 shld    edx, edi, cl
 mov     edi, dword, ptr, [esp, +, 48]
 test    al, 32
 mov     cl, ch
 cmovne  edx, dword, ptr, [esp, +, 12]
 shld    ebp, edi, cl
 test    ch, 32
 mov     cl, byte, ptr, [esp, +, 7]
 mov     edi, dword, ptr, [esp, +, 60]
 cmovne  ebp, dword, ptr, [esp, +, 8]
 or      edx, ebx
 mov     ebx, dword, ptr, [esp, +, 52]
 cmp     cl, 64
 cmovae  edx, ebp
 test    cl, cl
 mov     ecx, dword, ptr, [esp, +, 56]
 mov     ebp, 1204813824
 cmove   edx, edi
 cmove   esi, ecx
 or      ebx, edi
 mov     edi, dword, ptr, [esp, +, 48]
 shl     eax, 20
 shrd    esi, edx, 11
 sub     ebp, eax
 shr     edx, 11
 movd    xmm0, esi
 or      edi, ecx
 or      edi, ebx
 mov     edi, 0
 cmove   ebp, edi
 add     ebp, edx
 movd    xmm1, ebp
 punpckldq xmm0, xmm1
 movq    qword, ptr, [esp, +, 16], xmm0
 fld     qword, ptr, [esp, +, 16]
 add     esp, 28
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
