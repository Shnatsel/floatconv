floatconv::soft::i128_to_f64_truncate:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 32
 mov     ecx, dword, ptr, [esp, +, 52]
 mov     edx, dword, ptr, [esp, +, 56]
 mov     ebx, 0
 mov     edi, 0
 mov     eax, dword, ptr, [esp, +, 64]
 mov     ebp, 0
 mov     esi, ecx
 neg     esi
 sbb     ebx, edx
 sbb     edi, dword, ptr, [esp, +, 60]
 sbb     ebp, eax
 test    eax, eax
 cmovns  edi, dword, ptr, [esp, +, 60]
 cmovns  ebx, edx
 cmovns  esi, ecx
 cmovns  ebp, eax
 bsr     eax, ebp
 mov     dword, ptr, [esp, +, 12], ebp
 mov     dword, ptr, [esp, +, 8], esi
 mov     dword, ptr, [esp, +, 20], ebx
 xor     eax, 31
 bsr     ecx, edi
 mov     dword, ptr, [esp, +, 16], edi
 mov     edi, esi
 xor     ecx, 31
 add     ecx, 32
 test    ebp, ebp
 mov     ebp, dword, ptr, [esp, +, 16]
 cmovne  ecx, eax
 bsr     eax, esi
 mov     esi, 63
 cmovne  esi, eax
 bsr     edx, ebx
 xor     esi, 31
 xor     edx, 31
 add     esi, 32
 test    ebx, ebx
 mov     eax, ebp
 cmove   edx, esi
 mov     esi, ebp
 add     edx, 64
 or      eax, dword, ptr, [esp, +, 12]
 mov     eax, edi
 mov     edi, ebp
 mov     ebp, dword, ptr, [esp, +, 8]
 cmovne  edx, ecx
 mov     ch, dl
 and     ch, 127
 mov     byte, ptr, [esp, +, 3], ch
 sub     ch, 64
 neg     ch
 mov     cl, ch
 shrd    eax, ebx, cl
 shr     ebx, cl
 test    ch, 32
 mov     cl, dl
 cmovne  eax, ebx
 shl     esi, cl
 mov     dword, ptr, [esp, +, 4], ebx
 test    dl, 32
 mov     ebx, 0
 mov     dword, ptr, [esp, +, 28], esi
 cmovne  esi, ebx
 mov     ebx, 0
 or      esi, eax
 mov     ah, byte, ptr, [esp, +, 3]
 mov     al, ah
 add     al, -64
 mov     cl, al
 shl     ebp, cl
 test    al, 32
 mov     dword, ptr, [esp, +, 24], ebp
 cmovne  ebp, ebx
 cmp     ah, 64
 cmovb   ebp, esi
 test    ch, 32
 mov     ecx, dword, ptr, [esp, +, 4]
 mov     esi, dword, ptr, [esp, +, 12]
 cmovne  ecx, ebx
 mov     ebx, dword, ptr, [esp, +, 20]
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ecx, edx
 shld    esi, edi, cl
 test    dl, 32
 mov     edi, dword, ptr, [esp, +, 8]
 mov     ecx, eax
 cmovne  esi, dword, ptr, [esp, +, 28]
 shld    ebx, edi, cl
 test    al, 32
 mov     cl, ah
 cmovne  ebx, dword, ptr, [esp, +, 24]
 or      esi, dword, ptr, [esp, +, 4]
 cmp     ah, 64
 mov     eax, dword, ptr, [esp, +, 64]
 cmovae  esi, ebx
 and     eax, -2147483648
 test    cl, cl
 mov     ebx, dword, ptr, [esp, +, 12]
 mov     ecx, dword, ptr, [esp, +, 16]
 cmove   esi, ebx
 cmove   ebp, ecx
 or      ecx, dword, ptr, [esp, +, 8]
 or      ebx, dword, ptr, [esp, +, 20]
 shl     edx, 20
 shrd    ebp, esi, 11
 shr     esi, 11
 mov     edi, ecx
 mov     ecx, 1204813824
 sub     ecx, edx
 or      ebx, edi
 mov     edx, 0
 cmove   ecx, edx
 add     ecx, esi
 or      ecx, eax
 mov     eax, ebp
 mov     edx, ecx
 add     esp, 32
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
